<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--

    Checkstyle configuration that checks the IFLYTEK EDU  coding conventions base on:

    -  Java Style
       https://google-styleguide.googlecode.com/svn-history/r130/trunk/javaguide.html

    Checkstyle is very configurable. Be sure to read the documentation at
    http://checkstyle.sf.net (or in your downloaded distribution).

    Most Checks are configurable, be sure to consult the documentation.

    To completely disable a check, just comment it out or delete it from the file.

    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov.
	
	Update: yuwang@iflytek.com
	
	Change Log:
	2017/3/29 修改方法重载顺序错误提示为中文
 -->

<module name = "Checker">

	<!-- 字符集检测 -->
    <property name="charset" value="UTF-8"/>

	<!-- 格式错误时的，报错等级 -->
    <property name="severity" value="warning"/>

    <property name="fileExtensions" value="java, properties, xml"/>
	
    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
	<module name="FileTabCharacter">
		<property name="eachLine" value="true"/>
		<message key="containsTab" value="该行包含制表符" />
	</module>

    <module name="TreeWalker">
	
		<!-- 检查类名与文件名是否匹配 -->
        <module name="OuterTypeFilename"/>
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
            <property name="format" value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
            <property name="message" value="Avoid using corresponding octal or Unicode escape."/>
        </module>
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowEscapesForControlCharacters" value="true"/>
            <property name="allowByTailComment" value="true"/>
            <property name="allowNonPrintableEscapes" value="true"/>
        </module>
		
		<!-- 行长度检查 -->
        <module name="LineLength">
            <property name="max" value="120"/>
            <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
			<message key="maxLineLen" value="LineLength: 单行不应超过{0}个字符, 当前字符数: {1}"/>
        </module>
		
		<!-- 通配符Import检查 -->
        <module name="AvoidStarImport">
			<message key="import.avoidStar" value="AvoidStarImport: {0} 语句中应避免使用通配符''.*'' "/>
		</module>
        <module name="OneTopLevelClass"/>
        <module name="NoLineWrap"/>
        <module name="EmptyBlock">
            <property name="option" value="TEXT"/>
            <property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH" />				
        </module>
		
		<!-- 大括号检查 -->
        <module name="NeedBraces">
			<message key="needBraces" value="NeedBraces: ''{0}''需要使用大括号'''{}'''" />
		</module>
		
        <module name="LeftCurly">
            <property name="maxLineLength" value="120"/>	
        </module>
		
        <module name="RightCurly">
			<message key="line.same" value="''{0}'' 在第{1}列，应该与下个代码块在同一行" />			
		</module>
        <module name="RightCurly">
            <property name="option" value="alone"/>
            <property name="tokens" value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT"/>
        </module>
		
		<!-- 空格检查 -->
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
            <!-- <message key="ws.notFollowed"
             value="空格环绕: ''{0}''需要跟一个空格. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/> -->
			<message key="ws.notFollowed" value="''{0}''需要跟一个空格."/>
            <message key="ws.notPreceded" value="''{0}''前需要留一个空格."/>	 
        </module>
		
		<!-- 每行一条代码语句检查 -->
        <module name="OneStatementPerLine">
			<message key="multiple.statements.line" value="一行只能有一条语句." />
		</module>
		
		<!-- 多变量申明 -->
        <module name="MultipleVariableDeclarations">
			<message key="multiple.variable.declarations.comma" value="不要一次声明多个变量，请为每个变量使用独立语句声明." />
		</module>
		
        <module name="ArrayTypeStyle"/>
        <module name="MissingSwitchDefault"/>
        <module name="FallThrough"/>
        <module name="UpperEll"/>
        <module name="ModifierOrder"/>
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
			<message key="empty.line.separator" value="''{0}'' 应该与前面的语句空一行" />
        </module>
        <module name="SeparatorWrap">
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SeparatorWrap">
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
		    <message key="line.previous" value="''{0}'' 应该在上一行" />  
        </module>
		
		<!-- 包名检查 -->
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <message key="name.invalidPattern" value="包名''{0}'' 不符合正则表达式：''{1}''."/>
        </module>
		
		<!-- 类名检查 -->
        <module name="TypeName">
            <message key="name.invalidPattern" value="类名''{0}'' 不符合正则表达式： ''{1}'', 请按大驼峰命名规则修改,如:SomeJavaClass, SomeJavaEnum, SomeJavaInterface"/>
        </module>
		
		<!-- 方法名检查 -->
        <module name="MemberName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
             value="MemberName: 成员名''{0}'' 不符合正则表达式: ''{1}'', 请使用小驼峰命名规则修改,如：someMember , member1"/>
        </module>
		
		<!-- 参数名检查 -->
        <module name="ParameterName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
             value="参数名''{0}'' 不符合正则表达式: ''{1}'', 请使用小驼峰命名规则修改,如：someParam , param1"/>
        </module>
		
		<!-- 局部变量命名规则检查 -->
        <module name="LocalVariableName">
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <property name="allowOneCharVarInForLoop" value="true"/>
            <message key="name.invalidPattern"
             value="局部变量名 ''{0}'' 不符合正则表达式： ''{1}'', 请使用小驼峰命名规则修改,如：localVariable , num1"/>
        </module>
        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern"
             value="ClassTypeParameterName: Class type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern"
             value="Method type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="NoFinalizer"/>
        <module name="GenericWhitespace">
            <message key="ws.followed" value="''{0}'' 后面不能跟空格."/>
            <message key="ws.preceded" value="''{0}'' 前面不能有空格."/>
            <message key="ws.illegalFollow" value="''{0}'' 后面需要跟空格."/>
            <message key="ws.notPreceded" value="''{0}'' 前面需要有空格."/>			
        </module>
        <module name="Indentation">
            <property name="basicOffset" value="4"/>
            <property name="braceAdjustment" value="0"/>
            <property name="caseIndent" value="2"/>
            <property name="throwsIndent" value="4"/>
            <property name="lineWrappingIndentation" value="4"/>
            <property name="arrayInitIndent" value="2"/>
        </module>
        <module name="AbbreviationAsWordInName">
            <property name="ignoreFinal" value="false"/>
            <property name="allowedAbbreviationLength" value="1"/>
        </module>
		
		<!-- 重载方法声明顺序 -->
		<module name="OverloadMethodsDeclarationOrder">
			<message key="overload.methods.declaration" value="重载的方法不应该分开，前一个被重载的方法在''{0}''行." />
		</module> 
       		
		<!-- 变量申明与使用间距检查 -->
        <module name="VariableDeclarationUsageDistance">
			<message key="variable.declaration.usage.distance.extend" value="变量''{0}'' 的声明与其第一次使用相距{1}, 超过允许的距离{2}.  请在首次使用的位置就近声明变量，或考虑使用final关键字进行变量声明修饰."/>
		</module>
		
		<!-- import语句顺序检查-->
        <module name="CustomImportOrder">
            <property name="specialImportsRegExp" value="com.iflytek"/>
            <property name="sortImportsInGroupAlphabetically" value="true"/>
            <property name="customImportOrderRules" value="STATIC###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE###STANDARD_JAVA_PACKAGE"/>	
			<message key="custom.import.order" value="CustomImportOrder: import语句''{2}''顺序错误. 应该在 ''{0}'' 组中，此处是 ''{1}'' 组" />
			<message key="custom.import.order.line.separator" value="CustomImportOrder: ''{0}'' 需要与前一个import组使用空行分隔开" />
			<message key="custom.import.order.lex" value="CustomImportOrder: ''{0}'' 的字典序错误, 应将其放置在''{1}''之前." />
			<message key="custom.import.order.nonGroup.expected" value="import语句''{1}''顺序错误, 应将其放置在''{0}'' 组中" />
        </module>
        <module name="MethodParamPad">
            
        </module>
		
		<!-- 操作符换行检查 -->
        <module name="OperatorWrap">
            <property name="option" value="NL"/>
            <property name="tokens" value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR "/>
			<message key="line.new" value="''{0}'' 应该新起一行" />
			
        </module>
        <module name="AnnotationLocation">
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>
        </module>
        <module name="AnnotationLocation">
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="allowSamelineMultipleAnnotations" value="true"/>
        </module>
		
		<!-- JavaDoc标签描述检查-->
        <module name="NonEmptyAtclauseDescription">
			<message key="non.empty.atclause" value="Javadoc描述不能为空" />
		</module>
		
        <module name="JavadocTagContinuationIndentation"/>
		
		<!-- Javadoc描述检查 -->
		<!-- 关于为什么Javadoc首行说明要以.结尾的讨论 https://github.com/checkstyle/checkstyle/issues/472 -->
        <module name="SummaryJavadocCheck">
            <property name="period" value="。" />
            <property name="forbiddenSummaryFragments" value="^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )"/>
			<message key="summary.first.sentence" value="缺少Javadoc说明，或是首行说明不完整(缺少。)" />
        </module>
		
		<!-- Javadoc段落检查 -->
        <module name="JavadocParagraph">
			<message key="javadoc.paragraph.tag.after" value="空白行后应该紧跟&lt;p&gt;标签，否则请删除空行" />			
		</module>
		
		<!-- @标签定义顺序 -->
        <module name="AtclauseOrder">
            <property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
            <property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
			<!--
			<message key="at.clause.order" value="@标签需要按以下顺序定义: ''{0}'' " /> -->
        </module>
		
        <module name="JavadocMethod">
            <property name="scope" value="public"/>
            <property name="allowMissingParamTags" value="true"/>
            <property name="allowMissingThrowsTags" value="true"/>
            <property name="allowMissingReturnTag" value="true"/>
            <property name="minLineCount" value="2"/>
            <property name="allowedAnnotations" value="Override, Test"/>
            <property name="allowThrowsTagsForSubclasses" value="true"/>
			<message key="javadoc.unusedTag" value="无效的{0}标签说明:''{1}''" />
			<message key="javadoc.missing" value="缺少Javadoc注释" />
        </module>
		
		<!-- 方法名检查 -->
        <module name="MethodName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
            <message key="name.invalidPattern"
             value="方法名''{0}'' 不符合正则表达式：''{1}'', 请按小驼峰命名规则修改, 如:someJavaMethod"/>
        </module>
		
        <module name="SingleLineJavadoc">
            <property name="ignoreInlineTags" value="false"/>
        </module>
		
		<!-- 空catch语句块检查 -->
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected"/>
			<message key="catch.block.empty" value="catch语句块内不能为空." />
        </module>
		
        <module name="CommentsIndentation">	
			<message key="catch.block.empty" value="catch语句块内不能为空." />
		</module>
		
	</module>
</module>
